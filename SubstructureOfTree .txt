

class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}

public class Main {
    //判断子二叉树是否存在
    public boolean HasSubtree(TreeNode root1, TreeNode root2){
        boolean result = false;
        if(root1 != null && root2 != null){
            if(root1.val==root2.val)
                result = Tree1HaveTree2(root1,root2);
            if(!result)
                result = HasSubtree(root1.left,root2);
            if(!result)
                result = HasSubtree(root1.right,root2);
        }
        return result;
    }

    public boolean Tree1HaveTree2(TreeNode treeNode1, TreeNode treeNode2){
        if(treeNode2 == null)
            return true;
        if(treeNode1 == null)
            return false;
        if(treeNode1.val!=treeNode2.val)
            return false;
        return Tree1HaveTree2(treeNode1.left,treeNode2.left) &&
                Tree1HaveTree2(treeNode1.right,treeNode2.right);
    }
    public static void main(String[] args) {
    }
}
